apply plugin: 'kotlin-platform-native'

sourceSets {
    main {
        component {
            baseName.set("Greeting")
            targets = ['ios_arm32', 'ios_arm64', 'ios_x64']
            outputKinds = [FRAMEWORK]
        }
    }
    test {
        component {
            targets = ['ios_x64']
        }
    }
}

task copyFramework() {
    doLast {
        def srcFile = tasks['compileDebugIos_x64KotlinNative'].outputFile
        def targetDir = getProperty("konan.configuration.build.dir")
        copy {
            from srcFile.parent
            into targetDir
            include 'Greeting.framework/**'
            include 'Greeting.framework.dSYM'
        }
    }
}

afterEvaluate { project ->
    project.task('test', dependsOn: 'compileTestDebugKotlinNative', type: Exec, overwrite: true) {
        def textExecutable = tasks["compileTestDebugKotlinNative"].outputFile
        commandLine("xcrun", "simctl", "spawn", "iPhone 8", textExecutable)
    }
}

dependencies {
    // Specify dependency on a common project for Kotlin multiplatform build
    expectedBy project(':greeting:common')
}
